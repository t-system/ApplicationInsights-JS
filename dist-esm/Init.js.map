{"version":3,"file":"Init.js.map","sources":["Init.js"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nimport { ApplicationInsightsContainer } from \"./ApplicationInsightsContainer\";\nexport { Initialization as ApplicationInsights, Telemetry } from \"./Initialization\";\n\"use strict\";\nvar Undefined = \"undefined\";\nfunction _logWarn(aiName, message) {\n    // TODO: Find better place to warn to console when SDK initialization fails\n    var _console = typeof console !== Undefined ? console : null;\n    if (_console && _console.warn) {\n        _console.warn(\"Failed to initialize AppInsights JS SDK for instance \" + (aiName || \"<unknown>\") + \" - \" + message);\n    }\n}\n// should be global function that should load as soon as SDK loads\ntry {\n    // E2E sku on load initializes core and pipeline using snippet as input for configuration\n    // tslint:disable-next-line: no-var-keyword\n    var aiName;\n    if (typeof window !== Undefined) {\n        var _window = window;\n        aiName = _window[\"appInsightsSDK\"] || \"appInsights\";\n        if (typeof JSON !== Undefined) {\n            // get snippet or initialize to an empty object\n            if (_window[aiName] !== undefined) {\n                // this is the typical case for browser+snippet\n                var snippet = _window[aiName] || { version: 2.0 };\n                // overwrite snippet with full appInsights\n                // only initiaize if required and detected snippet version is >= 2 or not defined\n                if ((snippet.version >= 2.0 && _window[aiName].initialize) || snippet.version === undefined) {\n                    ApplicationInsightsContainer.getAppInsights(snippet, snippet.version);\n                }\n            }\n        }\n        else {\n            _logWarn(aiName, \"Missing JSON - you must supply a JSON polyfill!\");\n        }\n    }\n    else {\n        _logWarn(aiName, \"Missing window\");\n    }\n    // Hack: If legacy SDK exists, skip this step (Microsoft.ApplicationInsights exists).\n    // else write what was there for v2 SDK prior to rollup bundle output name change.\n    // e.g Microsoft.ApplicationInsights.ApplicationInsights, Microsoft.ApplicationInsights.Telemetry\n    // @todo uncomment once integration tests for this can be added\n    // if (typeof window !== Undefined && window && ((window as any).Microsoft && !(window as any).Microsoft.ApplicationInsights)) {\n    //     (window as any).Microsoft = (window as any).Microsoft || {};\n    //     (window as any).Microsoft.ApplicationInsights = {\n    //         ApplicationInsights, Telemetry\n    //     };\n    // }\n}\ncatch (e) {\n    _logWarn(aiName, e.message);\n}\n//# sourceMappingURL=Init.js.map"],"names":[],"mappings":";;;;AAA4D;AAC1B;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}